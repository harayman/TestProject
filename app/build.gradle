apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    signingConfigs {
        release {
            keyAlias 'key'
            keyPassword '111111'
            storeFile file('../key/test.jks')
            storePassword '111111'
        }
    }
    defaultConfig {
        applicationId "com.example.testprohect"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true //打开混淆
            shrinkResources true //打开资源压缩
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.release
            minifyEnabled false
            debuggable true
        }
    }

    flavorDimensions "default"
    productFlavors {
        eightx { dimension "default" }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            // 自定义输出路径
            variant.getPackageApplication().outputDirectory =new File(project.rootDir.absolutePath+"/apk")
            outputFileName = "test.apk"
        }
    }

    lintOptions {
        abortOnError false
  //      lintConfig file("path-to-lint.xml")
//        // true--关闭lint报告的分析进度
//        quiet true
//        // true--错误发生后停止gradle构建
//        abortOnError false
        // true--只报告error
        ignoreWarnings false
//        // true--忽略有错误的文件的全/绝对路径(默认是true)
//        //absolutePaths true
//        // true--检查所有问题点，包含其他默认关闭项
//        checkAllWarnings true
//        // true--所有warning当做error
//        warningsAsErrors true
//        // 关闭指定问题检查
//        disable 'TypographyFractions','TypographyQuotes'
//        // 打开指定问题检查
//        enable 'RtlHardcoded','RtlCompat', 'RtlEnabled'
//        // 仅检查指定问题
//        check 'NewApi', 'InlinedApi'
//        // true--error输出文件不包含源码行号
        noLines true
//        // true--显示错误的所有发生位置，不截取
        showAll true
//        // 回退lint设置(默认规则)
//        lintConfig file("default-lint.xml")
//        // true--生成txt格式报告(默认false)
//        textReport true
//        // 重定向输出；可以是文件或'stdout'
//        textOutput 'stdout'
//        // true--生成XML格式报告
//        xmlReport false
//        // 指定xml报告文档(默认lint-results.xml)
//        xmlOutput file("lint-report.xml")
        // true--生成HTML报告(带问题解释，源码位置，等)
        htmlReport true
        // html报告可选路径(构建器默认是lint-results.html )
//        htmlOutput file("${project.rootDir}/report/lint-${project.name}.html")
        htmlOutput file("lint-report.html")
//        //  true--所有正式版构建执行规则生成崩溃的lint检查，如果有崩溃问题将停止构建
//        checkReleaseBuilds true
//        // 在发布版本编译时检查(即使不包含lint目标)，指定问题的规则生成崩溃
//        fatal 'NewApi', 'InlineApi'
//        // 指定问题的规则生成错误
//        error 'Wakelock', 'TextViewEdits'
//        // 指定问题的规则生成警告
//        warning 'ResourceAsColor'
//        // 忽略指定问题的规则(同关闭检查)
//        ignore 'TypographyQuotes'
    }



}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
